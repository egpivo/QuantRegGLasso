// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// awgl_omega
Rcpp::List awgl_omega(const arma::mat Y, const arma::mat W, const arma::mat omega, const arma::vec lambda, const double tau, const int qn, double zeta, double zetaincre, int maxit, double tol);
RcppExport SEXP _QuantRegGroups_awgl_omega(SEXP YSEXP, SEXP WSEXP, SEXP omegaSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP qnSEXP, SEXP zetaSEXP, SEXP zetaincreSEXP, SEXP maxitSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const int >::type qn(qnSEXP);
    Rcpp::traits::input_parameter< double >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< double >::type zetaincre(zetaincreSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(awgl_omega(Y, W, omega, lambda, tau, qn, zeta, zetaincre, maxit, tol));
    return rcpp_result_gen;
END_RCPP
}
// awgl
Rcpp::List awgl(const arma::mat Y, const arma::mat W, const arma::vec lambda, const double tau, const int L, const int qn, double zeta, double zetaincre, int maxit, double tol);
RcppExport SEXP _QuantRegGroups_awgl(SEXP YSEXP, SEXP WSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP LSEXP, SEXP qnSEXP, SEXP zetaSEXP, SEXP zetaincreSEXP, SEXP maxitSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const int >::type L(LSEXP);
    Rcpp::traits::input_parameter< const int >::type qn(qnSEXP);
    Rcpp::traits::input_parameter< double >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< double >::type zetaincre(zetaincreSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(awgl(Y, W, lambda, tau, L, qn, zeta, zetaincre, maxit, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_QuantRegGroups_awgl_omega", (DL_FUNC) &_QuantRegGroups_awgl_omega, 10},
    {"_QuantRegGroups_awgl", (DL_FUNC) &_QuantRegGroups_awgl, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_QuantRegGroups(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
